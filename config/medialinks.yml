medialinks:

  #
  # Array of enabled providers, or `true` for all.
  #
  content: true

  #
  # Providers definition
  #
  # name:
  #   match     - regexp or array of regexps to check link
  #   type      - `block`, `inline` or `any`
  #   fetch_url - template to fetch additional data (for example via
  #               oembed `http://www.youtube.com/oembed?url=<%- self.src %>`)
  #   view      - normal view template
  #   stub      - dummy view template (without data)
  #   thumb_url - thumbnail url template (only for video in albums)
  #
  # Use `lodash` templates. Additional helpers:
  #
  #   - encode (mdurl.encode)
  #   - decode (mdurl.decode)
  #
  providers:

    youtube_block:
      name: YouTube
      home: http://www.youtube.com/
      type: block

      match:
        - /https?://(www\.)?youtube\.com/watch.*/i
        - /https?://(www\.)?youtube\.com/playlist.*/i
        - /https?://youtu\.be/.*/i

      fetch_url: |
        http://www.youtube.com/oembed?url=<%= self.helpers.encode(self.src, self.helpers.encode.componentChars) %>

      view: |
        <% var videoUrl = _.unescape(self.data.html.match(/src="([^"]+)/i)[1]).replace(/^https?:/, ''); %>
        <div class="medialink-video medialink-youtube" data-nd-type="medialink" data-nd-rule="youtube" data-nd-src="<%- self.src %>">
          <div class="embed-responsive" style="padding-bottom: <%- 100 / self.data.width * self.data.height %>%;">
            <iframe src="<%- videoUrl %>" allowfullscreen></iframe>
          </div>
        </div>

      stub: |
        <div class="medialink-video medialink-video__m-stub medialink-youtube" data-nd-type="medialink" data-nd-rule="youtube">
          <div class="embed-responsive embed-responsive-16by9">
          </div>
        </div>

      thumb_url: <%= self.data.thumbnail_url.replace(/^https?:/, '').replace(/\?.+$/, '?size=s') %>

    youtube_inline:
      name: YouTube
      home: http://www.youtube.com/
      type: inline

      match:
        - /https?://(www\.)?youtube\.com/watch.*/i
        - /https?://(www\.)?youtube\.com/playlist.*/i
        - /https?://youtu\.be/.*/i

      fetch_url: |
        http://www.youtube.com/oembed?url=<%= self.helpers.encode(self.src, self.helpers.encode.componentChars) %>

      view: |
        <a target="_blank" href="<%- self.src %>">[YouTube] <%- self.data.title %></a>

      stub: |
        <a href="<%- self.src %>">[YouTube] <%- self.helpers.decode(self.src) %></a>

    vimeo_block:
      name: Vimeo
      home: https://vimeo.com/
      type: block

      match: /https?://(.+\.)?vimeo\.com/.*/i

      fetch_url: |
        http://vimeo.com/api/oembed.json?url=<%= self.helpers.encode(self.src, self.helpers.encode.componentChars) %>

      view: |
        <% var videoUrl = _.unescape(self.data.html.match(/src="([^"]+)/i)[1]).replace(/^https?:/, ''); %>
        <div class="medialink-video medialink-vimeo" data-nd-type="medialink" data-nd-rule="vimeo" data-nd-src="<%- self.src %>">
          <div class="embed-responsive" style="padding-bottom: <%- 100 / self.data.width * self.data.height %>%;">
            <iframe src="<%- videoUrl %>" allowfullscreen></iframe>
          </div>
        </div>

      stub: |
        <div class="medialink-video medialink-video__m-stub medialink-vimeo" data-nd-type="medialink" data-nd-rule="vimeo">
          <div class="embed-responsive embed-responsive-16by9">
          </div>
        </div>

      thumb_url: <%= self.data.thumbnail_url.replace(/^https?:/, '').replace(/_[0-9]+\.jpg$/, '_200.jpg') %>

    vimeo_inline:
      name: Vimeo
      home: https://vimeo.com/
      type: inline

      match: /https?://(.+\.)?vimeo\.com/.*/i

      fetch_url: |
        http://vimeo.com/api/oembed.json?url=<%= self.helpers.encode(self.src, self.helpers.encode.componentChars) %>

      view: |
        <a target="_blank" href="<%- self.src %>">[Vimeo] <%- self.data.title %></a>

      stub: |
        <a href="<%- self.src %>">[Vimeo] <%- self.helpers.decode(self.src) %></a>

    rutube_block:
      name: Rutube
      home: http://rutube.ru/
      type: block

      match: /https?://(.+\.)?rutube\.ru/.*/i

      fetch_url: |
        http://rutube.ru/api/oembed/?format=json&url=<%= self.helpers.encode(self.src, self.helpers.encode.componentChars) %>

      view: |
        <% var videoUrl = _.unescape(self.data.html.match(/src="([^"]+)/i)[1]).replace(/^https?:/, ''); %>
        <div class="medialink-video medialink-rutube" data-nd-type="medialink" data-nd-rule="rutube" data-nd-src="<%- self.src %>">
          <div class="embed-responsive" style="padding-bottom: <%- 100 / self.data.width * self.data.height %>%;">
            <iframe src="<%- videoUrl %>" allowfullscreen></iframe>
          </div>
        </div>

      stub: |
        <div class="medialink-video medialink-video__m-stub medialink-rutube" data-nd-type="medialink" data-nd-rule="rutube">
          <div class="embed-responsive embed-responsive-16by9">
          </div>
        </div>

      thumb_url: <%= self.data.thumbnail_url.replace(/^https?:/, '').replace(/\?.+$/, '?size=s') %>

    rutube_inline:
      name: Rutube
      home: http://rutube.ru/
      type: inline

      match: /https?://(.+\.)?rutube\.ru/.*/i

      fetch_url: |
        http://rutube.ru/api/oembed/?format=json&url=<%= self.helpers.encode(self.src, self.helpers.encode.componentChars) %>

      view: |
        <a target="_blank" href="<%- self.src %>">[Rutube] <%- self.data.title %></a>

      stub: |
        <a href="<%- self.src %>">[Rutube] <%- self.helpers.decode(self.src) %></a>
