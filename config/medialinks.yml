medialinks:

  #
  # Array of enabled providers, or `true` for all.
  #
  content: true

  #
  # Providers definition
  #
  # name:
  #   match     - regexp or array of regexps to check link
  #   fetch     - function(require, N, url, callback) to get provider data
  #               for template. Should be string (function body)
  #   template  - lodash template to render fetched data
  #
  providers:

    youtube:
      match:
        - /https?://(www\.)?youtube\.com/watch.*/i
        - /https?://(www\.)?youtube\.com/playlist.*/i
        - /https?://youtu\.be/.*/i

      fetch: |
        var request = require('request');

        request('http://www.youtube.com/oembed?url=' + url, function (err, response, body) {
          if (err) {
            callback(err);
            return;
          }

          var oembed;
          try {
            oembed = JSON.parse(body);
          } catch (err) {
            callback(err);
            return;
          }

          var video_url = oembed.html.match(/src="([^"]+)/i)[1];
          video_url = video_url.replace(/^https?:/, '');

          var result = {
            provider: 'youtube',
            src: url,
            video_url: video_url,
            thumb: oembed.thumbnail_url.replace(/^https?:/, '').replace(/[a-z0-9]+\.jpg$/, 'mqdefault.jpg'),
            video_height: oembed.height,
            video_width: oembed.width
          };

          callback(null, result);
        });

      template: |
        <div class="medialink-video medialink-<%= self.provider %>" data-nd-type="medialink" data-nd-rule="<%= self.provider %>" data-nd-src="<%= self.src %>" data-nd-cache=\'{ url: "<%= self.video_url %>" }\'>
          <div class="embed-responsive embed-responsive-<%= self.video_width/self.video_height > 1.5 ? '16by9' : '4by3' %>">
            <iframe src="<%= self.video_url %>" allowfullscreen></iframe>
          </div>
        </div>

    vimeo:
      match: /https?://(.+\.)?vimeo\.com/.*/i

      fetch: |
        var request = require('request');

        request('http://vimeo.com/api/oembed.json?url=' + url, function (err, response, body) {
          if (err) {
            callback(err);
            return;
          }

          var oembed;
          try {
            oembed = JSON.parse(body);
          } catch (err) {
            callback(err);
            return;
          }

          var video_url = oembed.html.match(/src="([^"]+)/i)[1];
          video_url = video_url.replace(/^https?:/, '');

          var result = {
            provider: 'vimeo',
            src: url,
            video_url: video_url,
            thumb: oembed.thumbnail_url.replace(/^https?:/, '').replace(/_[0-9]+\.jpg$/, '_200.jpg'),
            video_height: oembed.height,
            video_width: oembed.width
          };

          callback(null, result);
        });

      template: |
        <div class="medialink-video medialink-<%= self.provider %>" data-nd-type="medialink" data-nd-rule="<%= self.provider %>" data-nd-src="<%= self.src %>" data-nd-cache=\'{ url: "<%= self.video_url %>" }\'>
          <div class="embed-responsive embed-responsive-<%= self.video_width/self.video_height > 1.5 ? '16by9' : '4by3' %>">
            <iframe src="<%= self.video_url %>" allowfullscreen></iframe>
          </div>
        </div>

    rutube:
      match: /https?://(.+\.)?rutube\.ru/.*/i

      fetch: |
        var request = require('request');

        request('http://rutube.ru/api/oembed/?format=json&url=' + url, function (err, response, body) {
          if (err) {
            callback(err);
            return;
          }

          var oembed;
          try {
            oembed = JSON.parse(body);
          } catch (err) {
            callback(err);
            return;
          }

          var video_url = oembed.html.match(/src="([^"]+)/i)[1];
          video_url = video_url.replace(/^https?:/, '');

          var result = {
            provider: 'rutube',
            src: url,
            video_url: video_url,
            thumb: oembed.thumbnail_url.replace(/^https?:/, '').replace(/\?.+$/, '?size=s'),
            video_height: oembed.height,
            video_width: oembed.width
          };

          callback(null, result);
        });

      template: |
        <div class="medialink-video medialink-<%= self.provider %>" data-nd-type="medialink" data-nd-rule="<%= self.provider %>" data-nd-src="<%= self.src %>" data-nd-cache=\'{ url: "<%= self.video_url %>" }\'>
          <div class="embed-responsive embed-responsive-<%= self.video_width/self.video_height > 1.5 ? '16by9' : '4by3' %>">
            <iframe src="<%= self.video_url %>" allowfullscreen></iframe>
          </div>
        </div>
