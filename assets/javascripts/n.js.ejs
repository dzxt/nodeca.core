//= require vendor/jquery/jquery
//= require vendor/powertip/jquery.powertip

//= require vendor/bootstrap/bootstrap
//= require vendor/history/history.adapter.jquery
//= require vendor/history/history
//= require vendor/jade/runtime

//= require javascripts/lib/collapse-notify
//= require javascripts/lib/notification


/*global NodecaLoader*/


NodecaLoader.execute(function (N, require) {
  'use strict';

  var Wire      = require('nodeca.core/lib/system/wire');
  var Pointer   = require('pointer');
  var BabelFish = require('babelfish');

  N.wire   = new Wire();
  N.views  = {};
  N.client = {};

  N.runtime         = JSON.parse($('meta[name="runtime"]').attr('content'));
  N.runtime.env     = <%- JSON.stringify(N.runtime.env) %>;
  N.runtime.version = <%- JSON.stringify(N.runtime.version) %>;
  N.runtime.router  = new Pointer();
  N.runtime.i18n    = new BabelFish({});

  // translations injector
  N.runtime.i18n.load = function loadTranslations(lang, data) {
    if (undefined === N.runtime.i18n._storage[lang]) {
      N.runtime.i18n._storage[lang] = {};
    }

    $.extend(N.runtime.i18n._storage[lang], data);
  };

  // translation helper with active locale
  N.runtime.t = function (phrase, params) {
    return N.runtime.i18n.t(N.runtime.locale, phrase, params);
  };

  N.runtime.t.exists = function (phrase) {
    return N.runtime.i18n.hasPhrase(N.runtime.locale, phrase);
  };

  (<%- jetson(N.runtime.client_routes) -%>).forEach(function (v) {
    N.runtime.router.addRoute(v[0], v[1]);
  });

  N.logger         = require('./logger');
  N.io             = require('./io');
  N.runtime.render = require('./render');
});
