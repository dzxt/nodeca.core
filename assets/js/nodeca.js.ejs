/*global window, nodeca*/

//= require_self
//= require_tree ./nodeca

var nodeca = window.nodeca = (function (nodeca) {
  'use strict';

  nodeca.runtime          = {};
  nodeca.runtime.env      = "<%= nodeca('runtime.env') %>";
  nodeca.runtime.version  = "<%= nodeca('runtime.version') %>";
  nodeca.runtime.router   = new Pointer();
  nodeca.runtime.i18n     = new BabelFish({});

  // translations injector
  nodeca.runtime.i18n.load = function loadTranslations(lang, namespace, data) {
    if (undefined === nodeca.runtime.i18n._storage[lang]) {
      nodeca.runtime.i18n._storage[lang] = {};
    }

    nodeca.runtime.i18n._storage[lang][namespace] = data;
  };

  // some defaults
  nodeca.runtime.locale   = "<%= nodeca('config.locales.default') %>";

  // translation helper with active locale
  nodeca.runtime.t        = function (phrase, params) {
    return nodeca.runtime.i18n.t(nodeca.runtime.locale, phrase, params);
  };

  nodeca.logger = {};
  _.each(['assert', 'error', 'info', 'debug'], function (level) {
    nodeca.logger[level] = function () {
      window.log.apply(null, [level].concat(Array.prototype.slice.call(arguments)));
    };
  });

  // fill in routes
  _.each(<%- jason(nodeca('runtime.routes_config')) %>, function (v) {
    nodeca.runtime.router.addRoute(v[0], v[1]);
  });

  return nodeca;
}({}));

// vim: syntax=javascript
