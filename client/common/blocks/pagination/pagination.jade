//- Create pagination
//-
//-   blocks.pagination.route    (String)     - routing rule. Ex: "forum.thread".
//-   blocks.pagination.params   (Object)     - routing params. See routing rules
//-                                             in config.
//-   blocks.pagination.current  (String|Int) - current page position
//-   blocks.pagination.max_page (String|Int) - current page position


//- Number of pages before/after current one
- var PAGES_INTERVAL = 2


//- create 'go to page' dropdown menu
mixin _pagination_dropdown_menu(route, params)
  form.dropdown-menu(
    data-pagination=JSON.stringify({ route: route, params: params }),
    data-on-submit='common.blocks.pagination.change')
    - var pgmpid = 'pgmid' + ~~(Math.random()*100000000);
    label.pgn__label.input(for=pgmpid) #{self.t('dropdown_label')}
    .input-append
      input.input-small(
        id=pgmpid, name="page", size='8', type='number', min='1',
        placeholder=self.t('dropdown_placeholder'))
      button.btn.btn-inverse(
        type='submit') #{self.t('dropdown_button')}


//- cast int types for safety (router returns parameters as strings)
- route    = self.route
- params   = self.params
- current  = +self.current
- max_page = +self.max_page


ul.pgn
  //- first page always displayed, except when current == 1.
  //- (then we skip first half of paginator)
  - if (current > 1)
    li.pgn__item: a.pgn__link(href=self.link_to(route, params)) 1

  //- left ellipsis displayed, if > 1 pages exists between first one
  //- and left head of "surrounding" pages
  - if (current > PAGES_INTERVAL + 2)
    li.pgn__item.interval.dropdown
      - delete(params.page)
      a.pgn__link.dropdown-toggle(
        href=self.link_to(route, params),
        data-target="#", data-toggle='dropdown') ...
      mixin _pagination_dropdown_menu(route, params)

  //- left surrounding pages displayed if current page > 2
  - for (var i=PAGES_INTERVAL; i > 0; i--) {
  -   if (current > i + 1) 
        - params.page = current - i
        li.pgn__item
          a.pgn__link(href=self.link_to(route, params)) #{current - i}
  - }

  // current page always dispayed
  li.pgn__item.current.dropdown
    - params.page = current
    a.pgn__link.dropdown-toggle(
      href=self.link_to(route, params),
      data-target="#", data-toggle='dropdown') #{current}
    mixin _pagination_dropdown_menu(route, params)

  //- right surrounding pages displayed if current page < (bottom-1)
  - for (var i=1 ; i <= PAGES_INTERVAL; i++) {
  -   if ((max_page - current) > i )
        - params.page = current + i
        li.pgn__item
          a.pgn__link(href=self.link_to(route, params)) #{current + i}
  - }

  //- right ellipsis displayed, if > 1 pages exists between right
  //- tail of "surrounding" pages and the last one.
  - if (max_page - current > PAGES_INTERVAL + 1)
    li.pgn__item.interval.dropdown
      - delete(params.page)
      a.pgn__link.dropdown-toggle(
        href=self.link_to(route, params),
        data-target="#", data-toggle='dropdown') ...
      mixin _pagination_dropdown_menu(route, params)

  //- last page always displayed, except it's current one
  //- (then we skip last half of paginator)
  - if (max_page - current !== 0)
    - params.page = max_page
    li.pgn__item
      a.pgn__link(href=self.link_to(route, params)) #{max_page}
